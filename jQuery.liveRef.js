// Generated by CoffeeScript 1.6.3
(function() {
  (function($) {
    var splitSelector;
    splitSelector = function(cssSelector) {
      return cssSelector.trim().replace(/\s{2,}/g, ' ').replace(RegExp(" > ", "g"), ">").replace(RegExp(" >", "g"), ">").replace(/> /g, ">").replace(/>/g, "@>@").replace(RegExp(" \\+ ", "g"), "+").replace(RegExp(" \\+", "g"), "+").replace(/\+ /g, "+").replace(/\+/g, "@+@").replace(RegExp(" ~ ", "g"), "~").replace(RegExp(" ~", "g"), "~").replace(/~ /g, "~").replace(/~/g, "@~@").replace(RegExp(" ", "g"), "@ @").split("@");
    };
    $.liveRef = function(selector) {
      var $liveRefcontext, combinator, liveRefMethod, liveRefSelector, splitted;
      splitted = splitSelector(selector);
      if (splitted.length % 2 !== 1) {
        return false;
      }
      if (splitted.length >= 3) {
        liveRefSelector = splitted.pop();
        combinator = splitted.pop();
        liveRefMethod = (function() {
          switch (false) {
            case combinator !== " ":
              return "find";
            case combinator !== "+":
              return "next";
            case combinator !== ">":
              return "children";
            case combinator !== "~":
              return "laterSiblings";
          }
        })();
        $liveRefcontext = $(splitted.join(""));
      } else {
        liveRefSelector = splitted[0];
        liveRefMethod = "find";
        $liveRefcontext = $("body");
      }
      return (function() {
        return $liveRefcontext[liveRefMethod](liveRefSelector);
      })();
    };
    return $.fn.extend({
      laterSiblings: function(selector) {
        var $parentChildren, index;
        selector = selector || function() {
          return true;
        };
        $parentChildren = this.parent().children();
        index = $parentChildren.index(this);
        return $parentChildren.slice(index).filter(selector);
      }
    });
  })(jQuery);

}).call(this);
