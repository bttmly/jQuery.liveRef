// Generated by CoffeeScript 1.6.3
(function($) {
  /*
  attaching to $ instead of $.fn, since $.fn returns a jQuery object of the selector
  */

  $.liveRef = function(selector) {
    var $jqlStem, jqlOperator, jqlSelector, popped, splitted;
    splitted = selector.replace(RegExp(" > ", "g"), ">").replace(RegExp(" >", "g"), ">").replace(/> /g, ">").replace(/>/g, "@>@").replace(RegExp(" \\+ ", "g"), "+").replace(RegExp(" \\+", "g"), "+").replace(/\+ /g, "+").replace(/\+/g, "@+@").replace(RegExp(" ~ ", "g"), "~").replace(RegExp(" ~", "g"), "~").replace(/~ /g, "~").replace(/~/g, "@~@").replace(RegExp(" ", "g"), "@ @").split("@");
    if (splitted.length > 3) {
      jqlSelector = splitted.pop();
      popped = splitted.pop();
      jqlOperator = (function() {
        switch (false) {
          case popped !== " ":
            return "find";
          case popped !== "+":
            return "next";
          case popped !== ">":
            return "children";
          case popped !== "~":
            return "nextSiblings";
        }
      })();
      $jqlStem = $(splitted.join(""));
    } else if (splitted(length === 1)) {
      jqlSelector = splitted[0];
      jqlOperator = "find";
      $jqlStem = $("body");
    }
    return (function() {
      return $jqlStem[jqlOperator](jqlSelector);
    })();
  };
  /* 
  quick and dirty.
  needs much more testing 
  this can probably be massively refactored and improved
  */

  return $.fn.extend({
    laterSiblings: function(selector) {
      var $parentChildren, context, matches, thisIndex;
      context = this;
      $parentChildren = this.parent().children();
      thisIndex = false;
      matches = [];
      $parentChildren.each(function(i) {
        if (context.is($(this))) {
          thisIndex = 8;
        }
        if (thisIndex) {
          if (selector) {
            if ($(this).is(selector)) {
              return matches.push($(this).not(context)[0]);
            }
          } else {
            return matches.push($(this).not(context)[0]);
          }
        }
      });
      matches.shift();
      return $(matches);
    }
  });
})(jQuery);
